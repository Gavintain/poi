# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import pandas as pd

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox


class Ui_MainWindow(object):

    def load_excel(self):
        # 엑셀 파일 선택 대화상자 열기
        file_name, _ = QFileDialog.getOpenFileName(None, "엑셀 파일 불러오기", "", "Excel Files (*.xls *.xlsx)")
        if file_name:
            try:
                # Pandas를 사용해 엑셀 파일 불러오기
                df = pd.read_excel(file_name)
                if df.empty:
                    QMessageBox.information(None, "Error", "엑셀 파일이 비어있습니다.")
                    return

                # QTableWidget 초기화
                self.tableWidget.setRowCount(df.shape[0])
                self.tableWidget.setColumnCount(df.shape[1])
                self.tableWidget.setHorizontalHeaderLabels(df.columns)

                # 폰트 설정
                font = QtGui.QFont()
                font.setPointSize(12)  # 폰트 크기 설정 (예: 12)
                self.tableWidget.setFont(font)

                # 데이터 QTableWidget에 삽입
                for i in range(df.shape[0]):
                    for j in range(df.shape[1]):
                        self.tableWidget.setItem(i, j, QtWidgets.QTableWidgetItem(str(df.iat[i, j])))

            except Exception as e:
                QMessageBox.critical(None, "Error", f"파일을 읽는 중 오류가 발생했습니다:\n{e}")

    def save_excel(self):
        # QTableWidget의 데이터를 DataFrame으로 변환
        row_count = self.tableWidget.rowCount()
        column_count = self.tableWidget.columnCount()

        # 헤더를 가져오기
        headers = []
        for column in range(column_count):
            headers.append(self.tableWidget.horizontalHeaderItem(column).text())

        # 데이터를 담을 리스트 초기화
        data = []
        for row in range(row_count):
            row_data = []
            for column in range(column_count):
                item = self.tableWidget.item(row, column)
                if item is not None:
                    row_data.append(item.text())
                else:
                    row_data.append('')
            data.append(row_data)

        # 리스트를 DataFrame으로 변환
        df = pd.DataFrame(data, columns=headers)

        # 엑셀 파일 저장 대화상자 열기
        file_name, _ = QFileDialog.getSaveFileName(None, "엑셀 파일로 저장", "", "Excel Files (*.xls *.xlsx)")
        if file_name:
            try:
                # DataFrame을 엑셀 파일로 저장
                df.to_excel(file_name, index=False)
                QMessageBox.information(None, "저장 완료", "데이터가 성공적으로 저장되었습니다.")
            except Exception as e:
                QMessageBox.critical(None, "Error", f"파일을 저장하는 중 오류가 발생했습니다:\n{e}")

    def insert_row(self):
        try:
            row_position = self.tableWidget.rowCount()
            self.tableWidget.insertRow(row_position)
        except Exception as e:
                QMessageBox.critical(None, "Error", f"행을 추가하는 도중에 오류가 발생했습니다.:\n{e}")

    def remove_rows(self):
        try:
            selected_rows = self.tableWidget.selectionModel().selectedRows()
            for index in sorted(selected_rows):
                self.tableWidget.removeRow(index.row())
        except Exception as e:
                QMessageBox.critical(None, "Error", f"행(들)을 제거하는 도중에 오류가 발생했습니다.:\n{e}")

    def insert_column(self):
        try:
            column_position = self.tableWidget.columnCount()
            self.tableWidget.insertcolumn(column_position)
        except Exception as e:
                QMessageBox.critical(None, "Error", f"열을 추가하는 도중에 오류가 발생했습니다.:\n{e}")

    def remove_columns(self):
        try:
            selected_columns = self.tableWidget.selectionModel().selectedColumns()
            for index in sorted(selected_columns):
                self.tableWidget.removecolumn(index.column())
        except Exception as e:
                QMessageBox.critical(None, "Error", f"열(들)을 제거하는 도중에 오류가 발생했습니다.:\n{e}")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1105, 843)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 10, 1101, 791))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("background-color: rgb(226, 226, 226);")
        self.tabWidget.setUsesScrollButtons(True)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_1 = QtWidgets.QWidget()
        self.tab_1.setObjectName("tab_1")
        self.tableWidget = QtWidgets.QTableWidget(self.tab_1)
        self.tableWidget.setGeometry(QtCore.QRect(10, 0, 891, 751))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_1)
        self.pushButton_8.setGeometry(QtCore.QRect(930, 10, 141, 111))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setStyleSheet("color: red;")
        self.pushButton_8.setAutoDefault(False)
        self.pushButton_8.setFlat(False)
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_9 = QtWidgets.QPushButton(self.tab_1)
        self.pushButton_9.setGeometry(QtCore.QRect(930, 130, 141, 111))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setAutoDefault(False)
        self.pushButton_9.setFlat(False)
        self.pushButton_9.setObjectName("pushButton_9")
        self.tabWidget.addTab(self.tab_1, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tabWidget.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1105, 21))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionGavintain = QtWidgets.QAction(MainWindow)
        self.actionGavintain.setObjectName("actionGavintain")
        self.menu.addAction(self.actionGavintain)
        self.menubar.addAction(self.menu.menuAction())

        ###### 버튼 연결
        self.pushButton_8.clicked.connect(self.load_excel)
        self.pushButton_9.clicked.connect(self.save_excel)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_8.setText(_translate("MainWindow", "불러오기"))
        self.pushButton_9.setText(_translate("MainWindow", "저장하기"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_1), _translate("MainWindow", "운전자관리"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "버스관리"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "근무표관리"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "배차관리"))
        self.menu.setTitle(_translate("MainWindow", "만든이"))
        self.actionGavintain.setText(_translate("MainWindow", "Gavintain"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
